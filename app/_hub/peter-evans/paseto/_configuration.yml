name: paseto
api_id: true
service_id: true
consumer_id: false
route_id: true
dbless_compatible: partially
dbless_explanation: |
  Authentication plugins can only be used if the set of credentials is static
  and specified as part of the declarative configuration.

  Admin API endpoints to dynamically create, update, or delete credentials are
  not available in DB-less mode.
config:
  - name: uri_param_names
    required: false
    default: "`paseto`"
    description: A list of querystring parameters that the plugin will inspect to retrieve PASETOs.
  - name: cookie_names
    required: false
    default:
    description: A list of cookie names that the plugin will inspect to retrieve PASETOs.
  - name: claims_to_verify<br/>.{claim_name}
    required: false
    default:
    description: |
      This is a list of custom objects that you can set, with arbitrary names set in the `{claim_name}` placeholder, like `claims_to_verify.claim_1.claim=ForAudience` if your object is called "claim_1".
  - name: claims_to_verify.<br/>{claim_name}.claim
    required: semi
    default:
    description: The claim rule or name of your custom claim. See below for a description of the claim rules.
  - name: claims_to_verify.<br/>{claim_name}.value
    required: semi
    default:
    description: The value to verify against.
  - name: kid_claim_name
    required: false
    default: "`kid`"
    description: |
      The name of the claim in which the kid identifying the PASETO key pair **must** be passed. The plugin will attempt to read this claim from the PASETO footer.
  - name: anonymous
    required: false
    default:
    description: |
      An optional string (consumer uuid) value to use as an "anonymous" consumer if authentication fails. If empty (default), the request will fail with an authentication failure `4xx`. Please note that this value must refer to the Consumer `id` attribute which is internal to Kong, and **not** its `custom_id`.
  - name: run_on_preflight
    required: false
    default: "`true`"
    description: |
      A boolean value that indicates whether the plugin should run (and try to authenticate) on `OPTIONS` preflight requests, if set to `false` then `OPTIONS` requests will always be allowed.

extra: |
  **Claim Rules**

  * `ForAudience` which compares the payload-provided `aud` claim with an expected value.
  * `IdentifiedBy` which compares the payload-provided `jti` claim with an expected value.
  * `IssuedBy` which compares the payload-provided `iss` claim with an expected value.
  * `NotExpired` which verifies that the current time is less than or equal to the DateTime stored in the `exp` claim.
  * `Subject` which compares the payload-provided `sub` claim with an expected value.
  * `ValidAt` which verifies all of the following:
    * The current time is less than or equal to the DateTime stored in the `exp` claim.
    * The current time is greater than or equal to the DateTime stored in the `iat` claim.
    * The current time is greater than or equal to the DateTime stored in the `nbf` claim.
  * `ContainsClaim` which verifies that the payload contains a claim with the specified name.
  * `{custom_claim}` which verifies that the payload contains a claim with the name set in the `{claim_name}` placeholder and with an expected value.

